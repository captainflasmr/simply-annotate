#+title: Simply Annotate: A Lightweight Annotation System
#+author: James Dyer
#+email: captainflasmr@gmail.com
#+language: en
#+options: ':t toc:nil author:nil email:nil num:nil title:nil
#+todo: TODO DOING | DONE
#+startup: showall

#+attr_org: :width 300px
#+attr_html: :width 50%
[[file:img/simply-annotate-banner.jpg]]

Yes thats right, yet another annotation system!, in this case it is a lightweight annotation system for Emacs that allows you to add persistent notes to any text file without modifying the original content.

Still not convinced it is any different to any other note taking package in Emacs given that previous generic sparse description? Well I shall do my best to explain my own note taking ideas.  Of course this is also just a pet project to continue to learn elisp, so there is that too :)

I developed this package to fill my own perceived gap in the existing Emacs note-taking ecosystem. Although =annotate.el= comes close to what I needed, I wanted a simplified version and something with a few workflow adjustments that better suit my note taking preferences. The result is a lightweight alternative that handles annotations the way I have always wanted them to work.

The main functional aspects that I felt were important to me that generally differ from other existing Emacs annotation packages are:

- Header-line status display
- Simple intuitive workflow (hopefully)
- Keybindings always shown in the header-line
- Annotation editing via a buffer
- Lightweight (if possible <1000 lines)
- Multi-purpose key to show/edit/toggle annotations
- Dedicated annotation buffer that can pop in and out
- Quickly step through annotations with =M-n= and =M-p=
- Buffer summary of annotations (although =annotate.el= also has this)
- Quickly browse through all annotated files using completing-read

See [[file:docs/simply-annotate.org]] for the manual!

* Whats New

** <2025-06-16> *0.0.2*

Refactored annotation system and enhance usability

* Installation

** MELPA (Recommended)

#+begin_src emacs-lisp
(use-package simply-annotate
  :bind ("C-c A" . simply-annotate-mode))
#+end_src

** Manual Installation

1. Download =simply-annotate.el=
2. Place it in your Emacs =load-path=
3. Add to your configuration:

#+begin_src emacs-lisp
(require 'simply-annotate)
(global-set-key (kbd "C-c A") simply-annotate-mode)
#+end_src

* Quick Start

1. Open any file
2. Enable annotation mode: =M-x simply-annotate-mode=
3. Select text and press =M-s SPC= to create your first annotation
4. Create some more annotations
5. Navigate with =M-n= (next) and =M-p= (previous)

* Usage

** Enabling Annotation Mode

#+begin_src emacs-lisp
M-x simply-annotate-mode
#+end_src

Or bind to a convenient key:

#+begin_src emacs-lisp
(global-set-key (kbd "C-c A") 'simply-annotate-mode)
#+end_src

** Creating Annotations

1. Select the region you want to annotate
2. Press =M-s SPC=
3. Use the full annotation buffer for detailed notes
4. Save with =C-c C-c=

** Viewing Annotations

When =simply-annotate-mode= is active:

- Annotated text is highlighted with a colored background
- The header line shows annotation count and available commands
- Moving to the next and previous annotation displays the annotation if the *Annotations* buffer is currently active
- Press =M-s SPC= on annotated text to view in detail

** Navigation

| Key Binding | Action                      |
|-------------+-----------------------------|
| =M-n=       | Jump to next annotation     |
| =M-p=       | Jump to previous annotation |
| =M-s SPC=   | Create/view/edit annotation |

** Managing Annotations

*** Editing

- Place cursor on annotated text
- Press =M-s SPC= to open the annotation buffer
- Make your changes
- Save with =C-c C-c=

*** Deleting

- Place cursor on annotated text
- Press =M-s -= to remove the annotation

*** Listing All Annotations

- Press =M-s l= to open a grep-mode buffer showing all annotations in the current file
- Click on line numbers or press =Enter= to jump directly to annotations
- Perfect for getting an overview of all your notes

*** Cross-file Overview

- Press =M-s 0= to browse annotations across all files
- Select a file from the completion list
- View all annotations for that file in grep-mode format

* Key Bindings

When =simply-annotate-mode= is enabled:

| Key Binding | Command                        | Description                          |
|-------------+--------------------------------+--------------------------------------|
| =M-s SPC=   | =simply-annotate-smart-action= | Create/view/edit annotation          |
| =M-s -=     | =simply-annotate-remove=       | Delete annotation at point           |
| =M-s l=     | =simply-annotate-list=         | List all annotations in current file |
| =M-s 0=     | =simply-annotate-show-all=     | Browse annotations across all files  |
| =M-n=       | =simply-annotate-next=         | Jump to next annotation              |
| =M-p=       | =simply-annotate-previous=     | Jump to previous annotation          |

In the annotation buffer:

| Key Binding | Command | Description |
|-------------|---------|-------------|
| =C-c C-c= | =simply-annotate-save-annotation-buffer= | Save changes |
| =C-c C-k= | =simply-annotate-cancel-edit= | Cancel editing |
| =C-x C-q= | =toggle-read-only= | Enter/exit edit mode |

* Customization

** Basic Configuration

#+begin_src emacs-lisp
(use-package simply-annotate
  :custom
  ;; Customize highlight colors
  (simply-annotate-highlight-face '(:background "lightblue" :foreground "darkblue"))
  
  ;; Change annotation buffer height (fraction of frame)
  (simply-annotate-buffer-height 0.25)
  
  ;; Custom storage location
  (simply-annotate-file "~/my-annotations.el")
  
  :bind
  ("C-c A" . simply-annotate-mode))
#+end_src

** Customization Options

| Variable                         | Default                              | Description                                     |
|----------------------------------+--------------------------------------+-------------------------------------------------|
| =simply-annotate-file=           | ="~/.emacs.d/simply-annotations.el"= | File to store annotations                       |
| =simply-annotate-highlight-face= | ='highlight=                         | Face for highlighted annotated text             |
| =simply-annotate-buffer-name=    | ="*Annotation*"=                     | Name of the annotation display buffer           |
| =simply-annotate-buffer-height=  | =0.3=                                | Height of annotation buffer (fraction of frame) |

** Custom Faces

#+begin_src emacs-lisp
;; Custom highlight face for annotations
(defface my-annotation-face
  '((t :background "lightyellow" :foreground "black"))
  "Face for annotation highlights")

(setq simply-annotate-highlight-face 'my-annotation-face)
#+end_src

* Examples

** Code Review Workflow

#+begin_src emacs-lisp
;; 1. Open the file you're reviewing
;; 2. Enable annotation mode
(simply-annotate-mode 1)

;; 3. Select problematic code and annotate
;; M-s SPC -> "TODO: This function needs error handling"

;; 4. Review all annotations before submitting
;; M-s l (to see all annotations in grep format)
#+end_src

** Research Notes

#+begin_src emacs-lisp
;; While reading academic papers or documentation:
;; 1. Select important passages
;; 2. Add contextual notes and cross-references
;; 3. Use M-s 0 to review notes across multiple files
#+end_src

** Documentation Workflow

#+begin_src emacs-lisp
;; 1. Annotate code sections that need documentation
;; 2. Use multi-line annotations for detailed explanations
;; 3. Export annotation list for documentation planning
#+end_src

* Data Storage

Annotations are stored in a single Emacs Lisp file (by default =~/.emacs.d/simply-annotations.el=). The format is human-readable and can be version controlled if desired.

** Sample Storage Format

#+begin_src emacs-lisp
;;; Simply Annotate Database
;;; This file is auto-generated. Do not edit manually.

(("simply-annotate:/path/to/file.el"
  ((start . 1250) (end . 1300) (text . "This needs refactoring"))
  ((start . 2100) (end . 2150) (text . "Add error handling here")))
 ("simply-annotate:/path/to/other-file.py"
  ((start . 450) (end . 500) (text . "Performance bottleneck"))))
#+end_src

* Tips and Tricks

** Workflow Suggestions

Enable the mode globally if you wish
   
#+begin_src emacs-lisp
(use-package simply-annotate
  :hook
  (find-file-hook . simply-annotate-mode)
  :bind
  ("C-c A" . simply-annotate-mode)
  ("C-c 0" . simply-annotate-show-all))
#+end_src

** Performance Notes

- Annotations are loaded on-demand per buffer
- Large numbers of annotations (100+) may slightly impact performance

* Troubleshooting

** Common Issues

*** Annotations not persisting

- Check that =simply-annotate-file= is writable
- Ensure the directory exists

*** Highlighting not visible

- Customize =simply-annotate-highlight-face= for your color theme
- Check for conflicting overlays from other packages

*** Keybindings not working

- Ensure =simply-annotate-mode= is enabled
- Check for conflicting keybindings with =C-h k=

** Getting Help

There is a manual!, just run ~M-x info~ or ~C-h i~ and search for =simply-annotate=

* Alternative package comparison

** 1. *annotate.el*

*Pros*:
- Mature and battle-tested with extensive user base
- Sophisticated query language for filtering annotations
- Flexible annotation positioning (inline, new line, based on font size)
- Comprehensive customization options
- Support for annotation expansion macros
- Database switching functionality

*simply-annotate* differentiates by:
- *Header-line status display* - UX status and keybindings
- *Annotation buffer* - with auto-show, editing and navigation
- *Lightweight implementation* - provides core functionality
- *Multi-line editing* with dedicated buffer interface

** 2. *org-annotate-file*

*Pros*:
- Full org-mode integration with all org features (outlines, babel, etc.)
- Leverages existing org-mode knowledge
- Long-standing package with proven workflow

*simply-annotate* differentiates by:
- *Visual overlay highlighting* vs text-only annotations
- *Interactive annotation buffer* that updates automatically
- *Simpler annotation format* that's less prone to corruption
- *Better multi-line support* without org-mode formatting requirements
- *More responsive user interface* with immediate visual feedback

** 3. *org-remark* (formerly org-marginalia)

*Pros*:
- Modern design with active development
- Sophisticated highlighting system with multiple highlight types
- Full org-mode integration for rich note-taking
- Good for research and academic workflows
- Support for multiple document types (PDFs, EPUBs, web pages)

*simply-annotate* differentiates by:
- *Focused on text files* rather than multi-format documents
- *Lighter weight* with faster startup and operation
- *Simpler annotation model* - text-centric rather than highlight-centric
- *More straightforward workflow* without requiring org-mode knowledge
- *Better for code annotation* and development workflows
- *Cleaner interface* with header-line status and dedicated annotation buffer

** 4. *org-noter*

*Pros*:
- Excellent for PDF and document annotation workflows
- Synchronized scrolling between document and notes
- Strong academic and research focus
- Good integration with document viewers (PDF-tools, DocView, nov.el)

*simply-annotate* differentiates by:
- *General-purpose file annotation* vs document-specific workflows
- *Simpler mental model* - annotate any text file directly
- *Lightweight operation* without requiring document viewer setup
- *Better for source code* and plain text file workflows
- *More immediate annotation access* without session management
- *Project-friendly storage* that travels with files

* Contributing

Contributions are welcome! Please:

1. Fork the repository
2. Create a feature branch
3. Add tests if applicable  
4. Submit a pull request

** Development Setup

#+begin_src emacs-lisp
;; For development, load from source
(add-to-list 'load-path "/path/to/simply-annotate")
(require 'simply-annotate)
#+end_src

* License

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

See the [[https://www.gnu.org/licenses/gpl-3.0.en.html][GNU General Public License]] for more details.

* Changelog

** Version 0.0.1 (Initial Release)

- Basic annotation functionality
- Persistent storage
- Navigation commands
- Org-mode export
- Customizable highlighting
- Auto-preview feature
