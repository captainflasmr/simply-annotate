\input texinfo    @c -*-texinfo-*-
@c %**start of header
@setfilename simply-annotate.info
@settitle Simply Annotate Manual
@documentencoding UTF-8
@documentlanguage en
@c %**end of header

@copying
This manual is for Simply Annotate (version 0.0.1), a lightweight annotation
system for Emacs.

Copyright @copyright{} 2024 James Dyer.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU
Free Documentation License''.
@end quotation
@end copying

@dircategory Emacs
@direntry
* Simply Annotate: (simply-annotate).    Lightweight annotation system for Emacs.
@end direntry

@titlepage
@title Simply Annotate Manual
@subtitle A lightweight annotation system for Emacs
@author James Dyer

@page
@vskip 0pt plus 1filll
@insertcopying

Published by the author.
@end titlepage

@contents

@ifnottex
@node Top
@top Simply Annotate

This manual describes Simply Annotate, a lightweight annotation system for
Emacs that allows you to add persistent notes to any text file without
modifying the original content.

@insertcopying
@end ifnottex

@menu
* Introduction::                What is Simply Annotate?
* Installation::                How to install Simply Annotate
* Quick Start::                 Getting started quickly
* Basic Usage::                 Creating and managing annotations
* Navigation::                  Moving between annotations
* Advanced Features::           Cross-file annotations and listing
* Key Bindings::                Complete key binding reference
* Customization::               Configuring Simply Annotate
* Data Storage::                How annotations are stored
* Troubleshooting::             Common issues and solutions
* Function Index::              Index of all functions
* Variable Index::              Index of all variables
* Concept Index::               Index of concepts
@end menu

@node Introduction
@chapter Introduction

Simply Annotate is a lightweight annotation system for Emacs that allows
you to add persistent notes to any text file without modifying the original
content. It's perfect for code review, research, note-taking, and documentation.

@section Key Features

@itemize @bullet
@item
@strong{Non-intrusive}: Annotations don't modify your original files
@item
@strong{Persistent}: Notes survive between Emacs sessions
@item
@strong{Contextual}: Automatic display when cursor moves over annotated text
@item
@strong{Rich editing}: Full-featured annotation buffer for longer notes
@item
@strong{Navigation}: Jump between annotations with simple keybindings
@item
@strong{Overview}: List all annotations in grep-mode format
@item
@strong{Cross-file}: Browse annotations across multiple files
@end itemize

@node Installation
@chapter Installation

@section Using MELPA (Recommended)

The easiest way to install Simply Annotate is through MELPA:

@lisp
(use-package simply-annotate
  :ensure t
  :bind ("C-c A" . simply-annotate-mode))
@end lisp

@section Manual Installation

If you prefer to install manually:

@enumerate
@item
Download @file{simply-annotate.el}
@item
Add to your load path:

@lisp
(add-to-list 'load-path "/path/to/simply-annotate")
(require 'simply-annotate)
@end lisp
@end enumerate

@node Quick Start
@chapter Quick Start

Here's how to get started with Simply Annotate in under a minute:

@enumerate
@item
Open any file in Emacs
@item
Enable annotation mode: @kbd{M-x simply-annotate-mode}
@item
Select some text and press @kbd{M-s SPC} to create your first annotation
@item
Type your annotation text and press @kbd{C-c C-c} to save
@item
Navigate with @kbd{M-n} (next) and @kbd{M-p} (previous)
@end enumerate

@node Basic Usage
@chapter Basic Usage

@section Enabling Annotation Mode

@findex simply-annotate-mode
To start using annotations in a buffer, enable the minor mode:

@example
M-x simply-annotate-mode
@end example

You can also bind this to a convenient key:

@lisp
(global-set-key (kbd "C-c A") 'simply-annotate-mode)
@end lisp

@section Creating Annotations

@subsection Multi-line Annotations

For longer, detailed annotations:

@enumerate
@item
Select the region you want to annotate
@item
Press @kbd{M-s SPC}
@item
Use the full annotation buffer for detailed notes
@item
Press @kbd{C-x C-q} to enter edit mode if needed
@item
Save with @kbd{C-c C-c}
@end enumerate

@section Viewing Annotations

When @code{simply-annotate-mode} is active:

@itemize @bullet
@item
Annotated text is highlighted with a colored background
@item
The header line shows annotation count and available commands
@item
Moving to the next and previous annotation displays the annotation if the *Annotations* buffer is currently active
@item
Press @kbd{M-s SPC} on annotated text to view in detail
@end itemize

@section Editing Annotations

@findex simply-annotate-save-annotation-buffer
@findex simply-annotate-cancel-edit
To edit an existing annotation:

@enumerate
@item
Place cursor on annotated text
@item
Press @kbd{M-s SPC} to open the annotation buffer
@item
Press @kbd{C-x C-q} to enter edit mode
@item
Make your changes
@item
Save with @kbd{C-c C-c} or cancel with @kbd{C-c C-k}
@end enumerate

@section Deleting Annotations

@findex simply-annotate-remove
To remove an annotation:

@enumerate
@item
Place cursor on annotated text
@item
Press @kbd{M-s -} to remove the annotation
@end enumerate

@node Navigation
@chapter Navigation

@section Moving Between Annotations

@findex simply-annotate-next
@findex simply-annotate-previous
Simply Annotate provides convenient commands for navigation:

@table @kbd
@item M-n
@code{simply-annotate-next} - Jump to next annotation
@item M-p
@code{simply-annotate-previous} - Jump to previous annotation
@end table

These commands automatically wrap around, so you can continuously navigate
through all annotations in a buffer.

@section Viewing Current Annotation

@findex simply-annotate-show
When you're on an annotated region, you can:

@itemize @bullet
@item
View the annotation content in the header line
@item
Press @kbd{M-s SPC} to open the detailed annotation buffer
@item
See the annotation count and position in the header line
@end itemize

@node Advanced Features
@chapter Advanced Features

@section Listing All Annotations

@findex simply-annotate-list
To see an overview of all annotations in the current buffer:

@example
M-s l
@end example

This opens a grep-mode buffer showing:
@itemize @bullet
@item
Line numbers for each annotation
@item
The annotated text content
@item
The annotation text itself
@item
Clickable links to jump to each annotation
@end itemize

@section Cross-file Annotation Browsing

@findex simply-annotate-show-all
To browse annotations across all files:

@example
M-s 0
@end example

This command:
@itemize @bullet
@item
Shows a completion list of all files with annotations
@item
Displays the annotation count for each file
@item
Opens the selected file and shows its annotations
@item
Uses grep-mode format for easy navigation
@end itemize

@section Annotation Buffer Features

The annotation buffer provides a rich editing environment:

@itemize @bullet
@item
Shows annotation position and count
@item
Displays source file and line number information
@item
Supports multi-line annotations with full editing capabilities
@item
Provides save and cancel operations
@item
Automatically formats and displays content
@end itemize

@node Key Bindings
@chapter Key Bindings

@section Main Mode Bindings

When @code{simply-annotate-mode} is enabled:

@multitable @columnfractions .2 .3 .5
@headitem Key Binding @tab Command @tab Description
@item @kbd{M-s SPC} @tab @code{simply-annotate-smart-action} @tab Create/view/edit annotation
@item @kbd{M-s -} @tab @code{simply-annotate-remove} @tab Delete annotation at point
@item @kbd{M-s l} @tab @code{simply-annotate-list} @tab List all annotations in current file
@item @kbd{M-s 0} @tab @code{simply-annotate-show-all} @tab Browse annotations across all files
@item @kbd{M-n} @tab @code{simply-annotate-next} @tab Jump to next annotation
@item @kbd{M-p} @tab @code{simply-annotate-previous} @tab Jump to previous annotation
@end multitable

@section Annotation Buffer Bindings

In the annotation buffer:

@multitable @columnfractions .2 .4 .4
@headitem Key Binding @tab Command @tab Description
@item @kbd{C-c C-c} @tab @code{simply-annotate-save-annotation-buffer} @tab Save changes
@item @kbd{C-c C-k} @tab @code{simply-annotate-cancel-edit} @tab Cancel editing
@item @kbd{C-x C-q} @tab @code{toggle-read-only} @tab Enter/exit edit mode
@end multitable

@node Customization
@chapter Customization

@section Basic Configuration

@lisp
(use-package simply-annotate
  :ensure t
  :config
  ;; Customize the highlight face
  (setq simply-annotate-highlight-face 'highlight)
  
  ;; Customize storage location
  (setq simply-annotate-file 
        (expand-file-name "my-annotations.el" user-emacs-directory))
  
  ;; Customize annotation buffer height
  (setq simply-annotate-buffer-height 0.4)
  
  :bind 
  ("C-c A" . simply-annotate-mode))
@end lisp

@section Customization Variables

@vtable @code
@item simply-annotate-file
@vindex simply-annotate-file
File to store annotations. Default: @file{~/.emacs.d/simply-annotations.el}

@item simply-annotate-highlight-face
@vindex simply-annotate-highlight-face
Face for highlighted annotated text. Default: @code{'highlight}

@item simply-annotate-buffer-name
@vindex simply-annotate-buffer-name
Name of the annotation display buffer. Default: @code{"*Annotation*"}

@item simply-annotate-buffer-height
@vindex simply-annotate-buffer-height
Height of annotation buffer as fraction of frame height. Default: @code{0.3}
@end vtable

@section Custom Faces

You can define custom faces for annotation highlights:

@lisp
;; Custom highlight face for annotations
(defface my-annotation-face
  '((t :background "lightyellow" :foreground "black"))
  "Face for annotation highlights")

(setq simply-annotate-highlight-face 'my-annotation-face)
@end lisp

@node Data Storage
@chapter Data Storage

@section Storage Format

Annotations are stored in a single Emacs Lisp file (by default
@file{~/.emacs.d/simply-annotations.el}). The format is human-readable
and can be version controlled if desired.

@section Sample Storage Format

@lisp
;;; Simply Annotate Database
;;; This file is auto-generated. Do not edit manually.

(("simply-annotate:/path/to/file.el"
  ((start . 1250) (end . 1300) (text . "This needs refactoring"))
  ((start . 2100) (end . 2150) (text . "Add error handling here")))
 ("simply-annotate:/path/to/other-file.py"
  ((start . 450) (end . 500) (text . "Performance bottleneck"))))
@end lisp

@section Data Management

@itemize @bullet
@item
The database file is automatically created when first needed
@item
Annotations are saved automatically when buffers are saved or killed
@item
The file uses a namespace prefix to avoid conflicts
@item
Empty databases are automatically cleaned up
@end itemize

@node Troubleshooting
@chapter Troubleshooting

@section Annotations Not Persisting

If your annotations aren't being saved between sessions:

@itemize @bullet
@item
Check that @code{simply-annotate-file} is writable
@item
Ensure annotation mode is properly enabled
@item
Verify that hooks are installed correctly
@item
Check file permissions on the storage directory
@end itemize

@section Performance with Large Files

Simply Annotate is designed to be lightweight:

@itemize @bullet
@item
Annotations use lightweight overlays
@item
No performance impact on file operations
@item
Consider splitting very large annotation sets across multiple files
@end itemize

@section Integration Issues

@itemize @bullet
@item
Annotations work with most major modes
@item
Compatible with @code{lsp-mode}, @code{flycheck}, and other packages
@item
May need customization for exotic display modes
@item
Check for conflicting key bindings
@end itemize

@section Common Error Messages

@table @strong
@item "No annotation at point"
You're trying to edit or remove an annotation, but the cursor isn't
positioned on annotated text.

@item "Annotation cancelled/removed"
You saved an empty annotation, which automatically removes it.

@item Database file errors
Check permissions and disk space for the storage file location.
@end table

@node Function Index
@unnumbered Function Index

@printindex fn

@node Variable Index
@unnumbered Variable Index

@printindex vr

@node Concept Index
@unnumbered Concept Index

@printindex cp

@bye
